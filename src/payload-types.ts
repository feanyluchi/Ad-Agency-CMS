/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    homepage: Homepage;
    properties: Property;
    media: Media;
    robots: Robot;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    properties: PropertiesSelect<false> | PropertiesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    robots: RobotsSelect<false> | RobotsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    staticTexts: StaticText;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    staticTexts: StaticTextsSelect<false> | StaticTextsSelect<true>;
  };
  locale: 'en' | 'nl' | 'es' | 'fr';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: string;
  home: {
    title: string;
    excerpt: string;
    slug?: string | null;
  };
  hero: {
    mediaType?: ('image' | 'video') | null;
    backgroundImage?: (string | null) | Media;
    backgroundVideo?: (string | null) | Media;
    backgroundColor:
      | '#B37400'
      | '#E69400'
      | '#FFA500'
      | '#FFB733'
      | '#FFC966'
      | '#FFDB99'
      | '#262626'
      | '#515151'
      | '#7D7D7D'
      | '#A8A8A8'
      | '#D4D4D4'
      | '#E9E9E9'
      | '#415894'
      | '#5776C5'
      | '#6D93F6'
      | '#8AA9F8'
      | '#A7BEFA'
      | '#C5D4FB';
    heroTitle?: string | null;
    subtitle?: string | null;
    description?: string | null;
  };
  discoverblock: {
    blockTitle: string;
    columns?:
      | {
          columnTitle: string;
          columnContent: string;
          id?: string | null;
        }[]
      | null;
  };
  whatWeDoBlock: {
    backgroundImage: string | Media;
    teamPhoto: string | Media;
    title: {
      text: string;
      id?: string | null;
    }[];
    description: string;
    backgroundColor:
      | '#B37400'
      | '#E69400'
      | '#FFA500'
      | '#FFB733'
      | '#FFC966'
      | '#FFDB99'
      | '#262626'
      | '#515151'
      | '#7D7D7D'
      | '#A8A8A8'
      | '#D4D4D4'
      | '#E9E9E9'
      | '#415894'
      | '#5776C5'
      | '#6D93F6'
      | '#8AA9F8'
      | '#A7BEFA'
      | '#C5D4FB';
  };
  whyChooseAdAgencyBlock?: {
    rows?:
      | {
          rowTitle?: string | null;
          image: string | Media;
          imagePosition?: ('right' | 'left') | null;
          backgroundColor:
            | '#B37400'
            | '#E69400'
            | '#FFA500'
            | '#FFB733'
            | '#FFC966'
            | '#FFDB99'
            | '#262626'
            | '#515151'
            | '#7D7D7D'
            | '#A8A8A8'
            | '#D4D4D4'
            | '#E9E9E9'
            | '#415894'
            | '#5776C5'
            | '#6D93F6'
            | '#8AA9F8'
            | '#A7BEFA'
            | '#C5D4FB';
          columns?:
            | {
                title: string;
                text: string;
                number: number;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  contactBlock: {
    content: string;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    mobile?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties".
 */
export interface Property {
  id: string;
  title: string;
  slug?: string | null;
  description: string;
  price?: number | null;
  featured?: boolean | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  parent?: (string | null) | Property;
  breadcrumbs?:
    | {
        doc?: (string | null) | Property;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  propertyFilter?: {
    filters?:
      | {
          filterType:
            | 'propertyCity'
            | 'numberOfBedrooms'
            | 'numberOfBathrooms'
            | 'propertyType'
            | 'propertyFeaturesType'
            | 'propertyStatus'
            | 'propertyTransactionType'
            | 'mlsType'
            | 'buildingStatusType'
            | 'energyCertificationConsumptionType'
            | 'energyCertificationEmissionsType'
            | 'floorType'
            | 'furnishedType'
            | 'garageType'
            | 'gardenType'
            | 'heatingType'
            | 'hotWaterType'
            | 'kitchenType'
            | 'noOfBuildingFloorType'
            | 'orientationType'
            | 'parkingType'
            | 'patioType'
            | 'priceFrequencyType'
            | 'propertyStatusType'
            | 'refurbishedType'
            | 'roadType'
            | 'shuttersType'
            | 'swimmingPoolType'
            | 'terraceType'
            | 'waterHeaterType'
            | 'viewType'
            | 'windowsMaterialType'
            | 'windowsType'
            | 'propertyConditionType'
            | 'equipmentType'
            | 'labelType';
          propertyCity?:
            | (
                | 'Altea'
                | 'Altea Hills'
                | 'Benitachell'
                | 'Calpe'
                | 'Dénia'
                | 'Gandia'
                | 'Javea'
                | 'Jesus Pobre'
                | 'Jávea'
                | 'Moraira'
              )
            | null;
          numberOfBedrooms?: ('1' | '2' | '3' | '4' | '5') | null;
          numberOfBathrooms?: ('1' | '2' | '3' | '4' | '5') | null;
          propertyType?:
            | (
                | 'apartment'
                | 'townhouse'
                | 'detached_house'
                | 'semi_detached_house'
                | 'finca'
                | 'villa'
                | 'duplex'
                | 'penthouse'
                | 'commercial_property'
                | 'plot_land'
                | 'bungalow'
              )
            | null;
          propertyFeaturesType?:
            | (
                | 'accessible_property'
                | 'adapted_entrance'
                | 'adapted_for_wheelchair'
                | 'air_conditioning'
                | 'Attic'
                | 'bank_property'
                | 'basement'
                | 'bbq_area'
                | 'beach_front'
                | 'blinds'
                | 'builtin_wardrobes'
                | 'Cable Satellite'
                | 'chimney'
                | 'community_pool'
                | 'courtyard'
                | 'deck'
                | 'dock'
                | 'double_glazing'
                | 'elevator'
                | 'equipped_kitchen'
                | 'exterior'
                | 'fitted_wardrobes'
                | 'Furnished'
                | 'garden'
                | 'gated entry'
                | 'greenhouse'
                | 'home_automation'
                | 'Home Theater'
                | 'hottub_spa'
                | 'Intercom'
                | 'Jetted Bath Tub'
                | 'laundry'
                | 'lift'
                | 'luxury_home'
                | 'parking'
                | 'patio'
                | 'pets_allowed'
                | 'pond'
                | 'porch'
                | 'reinforced_door'
                | 'Sauna'
                | 'security_guard'
                | 'service_entrance'
                | 'smoke_outlet'
                | 'solarium'
                | 'sports_court'
                | 'sprinkler_system'
                | 'storage_room'
                | 'swimming_pool'
                | 'technical_inspection_approved'
                | 'terrace'
                | 'Vaulted Ceiling'
                | 'Wet Bar'
                | 'with_mooring'
              )
            | null;
          propertyStatus?:
            | (
                | 'draft'
                | 'pending_approval'
                | 'active'
                | 'sold'
                | 'rented'
                | 'under_offer'
                | 'cancelled'
                | 'off_market'
                | 'negotiating'
                | 'under_contract'
                | 'open_house'
                | 'key_ready'
                | 'under_construction'
                | 'reserved'
                | 'removed_by_feed'
              )
            | null;
          propertyTransactionType?: ('for_sale' | 'for_rent' | 'transfer' | 'rental_with_option_of_purchase') | null;
          mlsType?:
            | ('kyero' | 'idealista' | 'think_spain' | 'place_in_the_sun' | 'luxury_estate' | 'own_company_xml')
            | null;
          buildingStatusType?: ('in_good_conditions' | 'to_reform') | null;
          energyCertificationConsumptionType?:
            | ('A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'not_available' | 'exempted' | 'in_process')
            | null;
          energyCertificationEmissionsType?:
            | ('A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'not_available' | 'exempted' | 'in_process')
            | null;
          floorType?: ('top_floor' | 'middle_floor' | 'ground_floor') | null;
          furnishedType?: ('furnished' | 'partly_furnished' | 'not_furnished') | null;
          garageType?: ('yes' | 'numbered' | 'unnumbered' | 'personal') | null;
          gardenType?: ('private' | 'communal') | null;
          heatingType?:
            | (
                | 'electrical_heating'
                | 'gas_heating'
                | 'under_floor_heating'
                | 'solar_heating'
                | 'diesel_heating'
                | 'aerothermy'
                | 'geothermal'
                | 'other'
              )
            | null;
          hotWaterType?: ('not_available' | 'individual' | 'central') | null;
          kitchenType?: ('individual' | 'american_style') | null;
          noOfBuildingFloorType?:
            | (
                | 'indifferent'
                | 'mezzanine'
                | 'ground_Floor'
                | '1ª'
                | '2ª'
                | '3ª'
                | '4ª'
                | '5ª'
                | '6ª'
                | '7ª'
                | '8ª'
                | '9ª'
                | '10ª'
                | '11ª'
                | '12ª'
                | '13ª'
                | '14ª'
                | '15ª'
                | '16ª'
                | '17ª'
                | '18ª'
                | '19ª'
                | '20ª'
                | '21ª'
                | '22ª'
                | '23ª'
                | '24ª'
                | '25ª'
                | '26ª'
                | '27ª'
                | '28ª'
                | '29ª'
                | '30ª'
                | '31ª'
                | '32ª'
                | '33ª'
                | '34ª'
                | '35ª'
                | '36ª'
                | '37ª'
                | '38ª'
                | '39ª'
                | '40ª'
                | '41ª'
                | '42ª'
                | '43ª'
                | '44ª'
                | '45ª'
                | '46ª'
                | '47ª'
                | '48ª'
                | '49ª'
                | '50ª'
              )
            | null;
          orientationType?:
            | ('north' | 'northeast' | 'east' | 'southeast' | 'south' | 'southwest' | 'west' | 'northwest')
            | null;
          parkingType?: ('yes' | 'numbered' | 'unnumbered') | null;
          patioType?: ('private' | 'shared') | null;
          priceFrequencyType?: ('sale' | 'month' | 'longterm') | null;
          propertyStatusType?: ('in_capture' | 'active' | 'reserved' | 'sold/rented' | 'archived') | null;
          refurbishedType?:
            | ('reformed' | 'not_reformed_but_in_good_condition' | 'not_reformed_and_needs_reform')
            | null;
          roadType?:
            | (
                | 'al'
                | 'ad'
                | 'ap'
                | 'ar'
                | 'ay'
                | 'av'
                | 'bj'
                | 'br'
                | 'bo'
                | 'bl'
                | 'cl'
                | 'cj'
                | 'cm'
                | 'cr'
                | 'cs'
                | 'ch'
                | 'cg'
                | 'co'
                | 'cn'
                | 'ct'
                | 'ed'
                | 'en'
                | 'es'
                | 'ex'
                | 'em'
                | 'er'
                | 'fc'
                | 'gl'
                | 'gv'
                | 'gr'
                | 'ht'
                | 'jr'
                | 'ld'
                | 'lg'
                | 'mz'
                | 'ms'
                | 'mc'
                | 'mt'
                | 'ml'
                | 'mn'
                | 'pa'
                | 'pq'
                | 'po'
                | 'pd'
                | 'pj'
                | 'ps'
                | 'pz'
                | 'pb'
                | 'pg'
                | 'pr'
                | 'pt'
                | 'pu'
                | 'qt'
                | 'rm'
                | 'rb'
                | 'rp'
                | 'rr'
                | 'rc'
                | 'rd'
                | 'ru'
                | 'sa'
                | 'sc'
                | 'sd'
                | 'sl'
                | 'sb'
                | 'tn'
                | 'to'
                | 'tr'
                | 'ur'
                | 'vi'
                | 'via'
              )
            | null;
          shuttersType?: ('unknown' | 'wood' | 'aluminium' | 'anodized_aluminium' | 'PVC' | 'other') | null;
          swimmingPoolType?: ('private' | 'communal' | 'climatized' | 'other') | null;
          terraceType?: ('glazed' | 'not_glazed') | null;
          waterHeaterType?:
            | ('electric' | 'natural_gas' | 'butane_gas' | 'ropane_gas' | 'diesel' | 'wood_coal' | 'solar_energy')
            | null;
          viewType?:
            | (
                | 'sea_views'
                | 'mountain_views'
                | 'to_the_canal'
                | 'to_the_golf_course'
                | 'clear_views'
                | 'panoramic_views'
                | 'spectacular_views'
                | 'other'
              )
            | null;
          windowsMaterialType?: ('pcv' | 'aluminium' | 'wood') | null;
          windowsType?:
            | ('fixed' | 'framed' | 'tilt_and_turn' | 'slide' | 'parallel_tilt' | 'pivoting' | 'combined' | 'foldable')
            | null;
          propertyConditionType?: ('new' | 'good_condition' | 'needs_renovation') | null;
          equipmentType?: ('indifferent' | 'fully_fitted_kitchen' | 'furnished') | null;
          labelType?: ('super_featured' | 'featured' | 'new_construction') | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "robots".
 */
export interface Robot {
  id: string;
  domain?: string | null;
  content?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role?: ('admin' | 'client') | null;
  firstName: string;
  lastName: string;
  profilePicture?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'homepage';
        value: string | Homepage;
      } | null)
    | ({
        relationTo: 'properties';
        value: string | Property;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'robots';
        value: string | Robot;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  home?:
    | T
    | {
        title?: T;
        excerpt?: T;
        slug?: T;
      };
  hero?:
    | T
    | {
        mediaType?: T;
        backgroundImage?: T;
        backgroundVideo?: T;
        backgroundColor?: T;
        heroTitle?: T;
        subtitle?: T;
        description?: T;
      };
  discoverblock?:
    | T
    | {
        blockTitle?: T;
        columns?:
          | T
          | {
              columnTitle?: T;
              columnContent?: T;
              id?: T;
            };
      };
  whatWeDoBlock?:
    | T
    | {
        backgroundImage?: T;
        teamPhoto?: T;
        title?:
          | T
          | {
              text?: T;
              id?: T;
            };
        description?: T;
        backgroundColor?: T;
      };
  whyChooseAdAgencyBlock?:
    | T
    | {
        rows?:
          | T
          | {
              rowTitle?: T;
              image?: T;
              imagePosition?: T;
              backgroundColor?: T;
              columns?:
                | T
                | {
                    title?: T;
                    text?: T;
                    number?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
  contactBlock?:
    | T
    | {
        content?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "properties_select".
 */
export interface PropertiesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  description?: T;
  price?: T;
  featured?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  propertyFilter?:
    | T
    | {
        filters?:
          | T
          | {
              filterType?: T;
              propertyCity?: T;
              numberOfBedrooms?: T;
              numberOfBathrooms?: T;
              propertyType?: T;
              propertyFeaturesType?: T;
              propertyStatus?: T;
              propertyTransactionType?: T;
              mlsType?: T;
              buildingStatusType?: T;
              energyCertificationConsumptionType?: T;
              energyCertificationEmissionsType?: T;
              floorType?: T;
              furnishedType?: T;
              garageType?: T;
              gardenType?: T;
              heatingType?: T;
              hotWaterType?: T;
              kitchenType?: T;
              noOfBuildingFloorType?: T;
              orientationType?: T;
              parkingType?: T;
              patioType?: T;
              priceFrequencyType?: T;
              propertyStatusType?: T;
              refurbishedType?: T;
              roadType?: T;
              shuttersType?: T;
              swimmingPoolType?: T;
              terraceType?: T;
              waterHeaterType?: T;
              viewType?: T;
              windowsMaterialType?: T;
              windowsType?: T;
              propertyConditionType?: T;
              equipmentType?: T;
              labelType?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        mobile?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        desktop?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "robots_select".
 */
export interface RobotsSelect<T extends boolean = true> {
  domain?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  firstName?: T;
  lastName?: T;
  profilePicture?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  firstNavItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          reference?: {
            relationTo: 'homepage';
            value: string | Homepage;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  logo: string | Media;
  secondNavItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          reference?: {
            relationTo: 'homepage';
            value: string | Homepage;
          } | null;
          url?: string | null;
          label: string;
        };
        hasChildren?: boolean | null;
        children?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                reference?: {
                  relationTo: 'homepage';
                  value: string | Homepage;
                } | null;
                url?: string | null;
                label: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  quickLinks?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          reference?: {
            relationTo: 'homepage';
            value: string | Homepage;
          } | null;
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  logo: string | Media;
  copyright: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "staticTexts".
 */
export interface StaticText {
  id: string;
  title: string;
  featuredHousesSection: string;
  contactUs: string;
  contactFormPlaceholders: {
    firstName: string;
    lastName: string;
    phoneNumber: string;
    email: string;
    message: string;
    send: string;
  };
  interestedContactAgent: string;
  mainFeatures: string;
  otherFeatures: string;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  firstNavItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  logo?: T;
  secondNavItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        hasChildren?: T;
        children?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  quickLinks?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  logo?: T;
  copyright?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "staticTexts_select".
 */
export interface StaticTextsSelect<T extends boolean = true> {
  title?: T;
  featuredHousesSection?: T;
  contactUs?: T;
  contactFormPlaceholders?:
    | T
    | {
        firstName?: T;
        lastName?: T;
        phoneNumber?: T;
        email?: T;
        message?: T;
        send?: T;
      };
  interestedContactAgent?: T;
  mainFeatures?: T;
  otherFeatures?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}